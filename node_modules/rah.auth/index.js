var jwt = require('express-jwt');
var settings = require('rah.utils').settings;
var crypto = require('crypto');
var algorithm = 'aes-256-cbc';
var password = '3zTvzr3p67VC61jmV54rIYu1545x4TlY';
var iv = 'a2xhcgAAAAAAAAAA'

function createToken(data) {
    console.log(data);
    var token = jwt.sign({ data}, settings.token.secret);
    return token;
}

function validToken(type, module) {
    return jwt(
        {
            secret: settings.token.secret,
            getToken: function (req) {
                var token = null;
                switch (type) {
                    case 'header':
                        token = req.headers['x-access-token'];
                    case 'cookie':
                        token = req.cookies['x-access-token'];
                }

                if (module && token) {

                }

                return token;
            }
        });
}



function encrypt(text) {
    var cipher = crypto.createCipheriv(algorithm, password, iv)
    var encrypted = cipher.update(text, 'utf8', 'base64')
    encrypted += cipher.final('base64');
    return encrypted;
}

function decrypt(encrypted) {
    var decipher = crypto.createDecipheriv(algorithm, password, iv)
    var dec = decipher.update(encrypted, 'base64', 'utf8')
    dec += decipher.final('utf8');
    return dec;
}

module.exports = {
    createToken: function (data) { return createToken(data); },
    req: validToken('header'),
    cookie: validToken('cookie')
}